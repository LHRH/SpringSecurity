<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.hellowood.springsecurity.mapper.UserMapper">

    <resultMap id="baseResultMap" type="cn.com.hellowood.springsecurity.model.UserModel">
        <id column="id" property="id" javaType="java.lang.Integer" jdbcType="INTEGER"></id>
        <result column="username" property="username" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="password" property="password" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="enabled" property="enabled" javaType="java.lang.Boolean" jdbcType="BOOLEAN"></result>
        <result column="expired" property="expired" javaType="java.lang.Boolean" jdbcType="BOOLEAN"></result>
        <result column="locked" property="locked" javaType="java.lang.Boolean" jdbcType="BOOLEAN"></result>
        <result column="category" property="category" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="add_time" property="addTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="comment" property="comment" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="last_update_time" property="lastUpdateTime" javaType="java.util.Date"
                jdbcType="TIMESTAMP"></result>
        <result column="category" property="category" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="category_name" property="categoryName" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="category_value" property="categoryValue" javaType="java.lang.String"
                jdbcType="VARCHAR"></result>
        <result column="category_display_value" property="categoryDisplayValue" javaType="java.lang.String"
                jdbcType="VARCHAR"></result>
    </resultMap>

    <resultMap id="roleResultMap" type="cn.com.hellowood.springsecurity.model.RoleModel">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="active" property="active" jdbcType="BOOLEAN"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <select id="getUserByUsername" parameterType="java.lang.String" resultMap="baseResultMap">
        SELECT
            u.id,
            u.username,
            u.password,
            u.enabled,
            u.expired,
            u.locked,
            u.category,
            u.add_time,
            u.last_update_time,
            u.comment,
            c.id            AS category,
            c.name          AS category_name,
            c.value         AS category_value,
            c.display_value AS category_display_value
        FROM user u
            LEFT JOIN codetable c
                ON u.category = c.id
        WHERE username = #{username, jdbcType=VARCHAR}
    </select>

    <select id="getUserByUsernameAndPassword" resultType="cn.com.hellowood.springsecurity.model.UserModel">
        SELECT
            u.id,
            u.username,
            u.password,
            u.enabled,
            u.expired,
            u.locked,
            u.category,
            u.add_time,
            u.last_update_time,
            u.comment,
            c.id            AS category,
            c.name          AS category_name,
            c.value         AS category_value,
            c.display_value AS category_display_value
        FROM user u
            LEFT JOIN codetable c
                ON u.category = c.id
        WHERE username = #{username, jdbcType=VARCHAR}
              AND password = #{password, jdbcType=VARCHAR}
    </select>

    <select id="getRoleByUserId" parameterType="java.lang.Integer"
            resultType="cn.com.hellowood.springsecurity.model.RoleModel">
        SELECT
            r.id,
            r.name,
            r.value,
            r.active,
            r.description,
            r.last_update_time
        FROM role r
            LEFT JOIN user_role_xref urx
                ON r.id = urx.role_id
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </select>
</mapper>
